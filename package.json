{
  "name": "code-context-notes",
  "displayName": "Code Context Notes - Smart Annotations",
  "description": "Add contextual notes to your code with full version history and intelligent tracking",
  "version": "0.2.0",
  "publisher": "jnahian",
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#2d3748",
    "theme": "dark"
  },
  "bugs": {
    "url": "https://github.com/jnahian/code-context-notes/issues"
  },
  "homepage": "https://github.com/jnahian/code-context-notes#readme",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other",
    "Notebooks",
    "Programming Languages"
  ],
  "keywords": [
    "notes",
    "annotations",
    "comments",
    "context",
    "documentation",
    "markdown",
    "codelens",
    "history",
    "tracking",
    "code-notes"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "codeContextNotes.addNote",
        "title": "Add Note",
        "icon": "$(add)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.deleteNote",
        "title": "Delete Note at Cursor",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.viewHistory",
        "title": "View Note History",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.refreshNotes",
        "title": "Refresh All Notes",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.editNote",
        "title": "Edit Note",
        "icon": "$(edit)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.saveNote",
        "title": "Save Note",
        "icon": "$(save)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.cancelEditNote",
        "title": "Cancel",
        "icon": "$(close)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.saveNewNote",
        "title": "Save Note",
        "icon": "$(save)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.cancelNewNote",
        "title": "Cancel",
        "icon": "$(close)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.insertBold",
        "title": "Insert Bold Text",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.insertItalic",
        "title": "Insert Italic Text",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.insertCode",
        "title": "Insert Inline Code",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.insertCodeBlock",
        "title": "Insert Code Block",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.insertLink",
        "title": "Insert Link",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.insertList",
        "title": "Insert List",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.showMarkdownHelp",
        "title": "Show Markdown Formatting Guide",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.deleteNoteFromComment",
        "title": "Delete Note",
        "icon": "$(trash)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.viewNoteHistory",
        "title": "View History",
        "icon": "$(history)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.previousNote",
        "title": "Previous Note",
        "icon": "$(chevron-left)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.nextNote",
        "title": "Next Note",
        "icon": "$(chevron-right)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.addNoteToLine",
        "title": "Add Note",
        "icon": "$(add)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.openNoteFromSidebar",
        "title": "Go to Note",
        "icon": "$(go-to-file)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.refreshSidebar",
        "title": "Refresh Sidebar",
        "icon": "$(refresh)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.collapseAll",
        "title": "Collapse All",
        "icon": "$(collapse-all)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.openFileFromSidebar",
        "title": "Open File",
        "icon": "$(go-to-file)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.editNoteFromSidebar",
        "title": "Edit Note",
        "icon": "$(edit)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.deleteNoteFromSidebar",
        "title": "Delete Note",
        "icon": "$(trash)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.viewNoteHistoryFromSidebar",
        "title": "View History",
        "icon": "$(history)",
        "category": "Code Notes"
      },
      {
        "command": "codeContextNotes.searchNotes",
        "title": "Search Notes",
        "icon": "$(search)",
        "category": "Code Notes"
      }
    ],
    "keybindings": [
      {
        "command": "codeContextNotes.addNote",
        "key": "ctrl+alt+n",
        "mac": "cmd+alt+n",
        "when": "editorTextFocus"
      },
      {
        "command": "codeContextNotes.deleteNote",
        "key": "ctrl+alt+d",
        "mac": "cmd+alt+d",
        "when": "editorTextFocus"
      },
      {
        "command": "codeContextNotes.viewHistory",
        "key": "ctrl+alt+h",
        "mac": "cmd+alt+h",
        "when": "editorTextFocus"
      },
      {
        "command": "codeContextNotes.refreshNotes",
        "key": "ctrl+alt+r",
        "mac": "cmd+alt+r",
        "when": "editorTextFocus"
      },
      {
        "command": "codeContextNotes.searchNotes",
        "key": "ctrl+shift+f",
        "mac": "cmd+shift+f",
        "when": "!searchViewletFocus && !replaceInputBoxFocus"
      },
      {
        "command": "codeContextNotes.insertBold",
        "key": "ctrl+b",
        "mac": "cmd+b",
        "when": "commentEditorFocused"
      },
      {
        "command": "codeContextNotes.insertItalic",
        "key": "ctrl+i",
        "mac": "cmd+i",
        "when": "commentEditorFocused"
      },
      {
        "command": "codeContextNotes.insertCode",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c",
        "when": "commentEditorFocused"
      },
      {
        "command": "codeContextNotes.insertCodeBlock",
        "key": "ctrl+shift+k",
        "mac": "cmd+shift+k",
        "when": "commentEditorFocused"
      },
      {
        "command": "codeContextNotes.insertLink",
        "key": "ctrl+k",
        "mac": "cmd+k",
        "when": "commentEditorFocused"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "codeContextNotes.addNote",
          "when": "view == codeContextNotes.sidebarView",
          "group": "navigation@1"
        },
        {
          "command": "codeContextNotes.searchNotes",
          "when": "view == codeContextNotes.sidebarView",
          "group": "navigation@2"
        },
        {
          "command": "codeContextNotes.collapseAll",
          "when": "view == codeContextNotes.sidebarView",
          "group": "navigation@3"
        },
        {
          "command": "codeContextNotes.refreshSidebar",
          "when": "view == codeContextNotes.sidebarView",
          "group": "navigation@4"
        }
      ],
      "view/item/context": [
        {
          "command": "codeContextNotes.openNoteFromSidebar",
          "when": "view == codeContextNotes.sidebarView && viewItem == noteNode",
          "group": "navigation@1"
        },
        {
          "command": "codeContextNotes.editNoteFromSidebar",
          "when": "view == codeContextNotes.sidebarView && viewItem == noteNode",
          "group": "1_actions@1"
        },
        {
          "command": "codeContextNotes.viewNoteHistoryFromSidebar",
          "when": "view == codeContextNotes.sidebarView && viewItem == noteNode",
          "group": "1_actions@2"
        },
        {
          "command": "codeContextNotes.deleteNoteFromSidebar",
          "when": "view == codeContextNotes.sidebarView && viewItem == noteNode",
          "group": "1_actions@3"
        },
        {
          "command": "codeContextNotes.openFileFromSidebar",
          "when": "view == codeContextNotes.sidebarView && viewItem == fileNode",
          "group": "navigation@1"
        }
      ],
      "comments/commentThread/context": [
        {
          "command": "codeContextNotes.saveNewNote",
          "group": "inline@1",
          "when": "commentController == codeContextNotes && commentThreadIsEmpty"
        },
        {
          "command": "codeContextNotes.cancelNewNote",
          "group": "inline@2",
          "when": "commentController == codeContextNotes && commentThreadIsEmpty"
        }
      ],
      "comments/comment/title": [
        {
          "command": "codeContextNotes.previousNote",
          "group": "inline@1",
          "when": "commentController == codeContextNotes && comment =~ /:multi$/"
        },
        {
          "command": "codeContextNotes.nextNote",
          "group": "inline@2",
          "when": "commentController == codeContextNotes && comment =~ /:multi$/"
        },
        {
          "command": "codeContextNotes.addNoteToLine",
          "group": "inline@3",
          "when": "commentController == codeContextNotes && comment =~ /^[a-f0-9-]+/"
        },
        {
          "command": "codeContextNotes.editNote",
          "group": "inline@4",
          "when": "commentController == codeContextNotes && comment =~ /^[a-f0-9-]+/"
        },
        {
          "command": "codeContextNotes.viewNoteHistory",
          "group": "inline@5",
          "when": "commentController == codeContextNotes && comment =~ /^[a-f0-9-]+/"
        },
        {
          "command": "codeContextNotes.deleteNoteFromComment",
          "group": "inline@6",
          "when": "commentController == codeContextNotes && comment =~ /^[a-f0-9-]+/"
        }
      ],
      "comments/comment/context": [
        {
          "command": "codeContextNotes.saveNote",
          "group": "inline@1",
          "when": "commentController == codeContextNotes"
        },
        {
          "command": "codeContextNotes.cancelEditNote",
          "group": "inline@2",
          "when": "commentController == codeContextNotes"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "codeContextNotes",
          "title": "Code Notes",
          "icon": "images/task.png"
        }
      ]
    },
    "views": {
      "codeContextNotes": [
        {
          "id": "codeContextNotes.sidebarView",
          "name": "Notes",
          "contextualTitle": "Code Context Notes"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "codeContextNotes.sidebarView",
        "contents": "No notes found in this workspace.\n[Add Your First Note](command:codeContextNotes.addNote)\nSelect some code and add a note to get started!"
      }
    ],
    "configuration": {
      "title": "Code Context Notes",
      "properties": {
        "codeContextNotes.storageDirectory": {
          "type": "string",
          "default": ".code-notes",
          "description": "Directory where notes are stored (relative to workspace root)"
        },
        "codeContextNotes.authorName": {
          "type": "string",
          "default": "",
          "description": "Override author name (defaults to git username or system username)"
        },
        "codeContextNotes.showCodeLens": {
          "type": "boolean",
          "default": true,
          "description": "Show CodeLens indicators above code with notes"
        },
        "codeContextNotes.sidebar.previewLength": {
          "type": "number",
          "default": 50,
          "minimum": 20,
          "maximum": 200,
          "description": "Maximum length of note preview text in sidebar"
        },
        "codeContextNotes.sidebar.autoExpand": {
          "type": "boolean",
          "default": false,
          "description": "Automatically expand file nodes in sidebar"
        },
        "codeContextNotes.sidebar.sortBy": {
          "type": "string",
          "enum": [
            "file"
          ],
          "default": "file",
          "description": "Sort notes by: file path, date, or author (file path only in v0.2.0)"
        },
        "codeContextNotes.search.fuzzyMatching": {
          "type": "boolean",
          "default": false,
          "description": "Enable fuzzy matching for search queries"
        },
        "codeContextNotes.search.caseSensitive": {
          "type": "boolean",
          "default": false,
          "description": "Make search case-sensitive by default"
        },
        "codeContextNotes.search.maxResults": {
          "type": "number",
          "default": 100,
          "minimum": 10,
          "maximum": 500,
          "description": "Maximum number of search results to display"
        },
        "codeContextNotes.search.debounceDelay": {
          "type": "number",
          "default": 200,
          "minimum": 50,
          "maximum": 1000,
          "description": "Delay in milliseconds before triggering search (default: 200ms)"
        },
        "codeContextNotes.search.saveHistory": {
          "type": "boolean",
          "default": true,
          "description": "Save search history for quick access to recent searches"
        },
        "codeContextNotes.search.historySize": {
          "type": "number",
          "default": 20,
          "minimum": 5,
          "maximum": 100,
          "description": "Number of recent searches to keep in history"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "node esbuild.config.js --production",
    "compile:tsc": "tsc -p ./",
    "watch": "node esbuild.config.js --watch",
    "watch:tsc": "tsc -watch -p ./",
    "pretest": "npm run compile:tsc",
    "lint": "echo 'Linting skipped - eslint not configured'",
    "test": "node ./out/test/runTest.js",
    "test:unit": "npm run compile:tsc && node ./out/test/runUnitTests.js",
    "test:coverage": "npm run compile:tsc && nyc --reporter=html --reporter=text node ./out/test/runUnitTests.js",
    "publish": "node scripts/publish.mjs",
    "publish:bash": "./scripts/publish.sh",
    "package": "node scripts/package.mjs",
    "package:simple": "vsce package",
    "package:dev": "vsce package --no-git-tag-version",
    "web:install": "cd web && npm install",
    "web:dev": "cd web && npm run dev",
    "web:dev:ssr": "cd web && npm run dev:ssr",
    "web:build": "cd web && npm run build",
    "web:build:vercel": "cd web && npm run build:vercel",
    "web:preview:ssr": "cd web && npm run preview:ssr"
  },
  "devDependencies": {
    "@types/chai": "^5.2.2",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.8.0",
    "@types/uuid": "^10.0.0",
    "@types/vscode": "^1.80.0",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.6.2",
    "chai": "^6.2.0",
    "esbuild": "^0.25.11",
    "glob": "^11.0.3",
    "mocha": "^11.7.4",
    "nyc": "^17.1.0",
    "ovsx": "^0.10.6",
    "typescript": "^5.9.3"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/jnahian/code-context-notes"
  },
  "dependencies": {
    "uuid": "^13.0.0"
  }
}
